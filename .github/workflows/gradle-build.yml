name: Gradle Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: 使用 Gradle 构建
    runs-on: macos-14

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 缓存 Gradle 包和 Maven 本地仓库
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.m2/repository
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          ${{ runner.os }}-maven-

    - name: 设置 JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: 设置 JAVA_HOME
      run: echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))" >> $GITHUB_ENV

    - name: 验证 JAVA_HOME
      run: echo $JAVA_HOME

    - name: 构建 nms 项目
      run: ./gradlew :nms:v1_19_R3:build --info --stacktrace

    - name: 运行 iris 任务
      run: ./gradlew iris --parallel --max-workers=3 --info --stacktrace

    - name: 列出当前目录内容
      run: ls -R . || echo "当前目录不存在"

    - name: 列出 Iris 目录内容
      run: ls -R Iris || echo "Iris 目录不存在"

    - name: 列出构建输出
      run: ls -R build/libs || echo "构建输出目录不存在"

    - name: 创建 GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: 上传构建工件到 Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/libs/Iris-*.jar
        asset_name: Iris-${{ github.ref }}.jar
        asset_content_type: application/java-archive
